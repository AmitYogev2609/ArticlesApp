<?xml version="1.0" encoding="utf-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ArticlesApp.Views.MyProfilePage"
             xmlns:controls="clr-namespace:ImageCircle.Forms.Plugin.Abstractions;assembly=ImageCircle.Forms.Plugin"
             xmlns:local="clr-namespace:ArticlesApp.Renderer"
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:ffSvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
             xmlns:ffTransf="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
             xmlns:yummy="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView">
    <ContentView.Resources>
        <Style TargetType="yummy:PancakeView">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
                                        Value="Transparent" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>
    </ContentView.Resources>
    <ContentView.Content>
        <StackLayout Spacing="0" Style="{DynamicResource MainBackgroundStyle}" Margin="0" >
            <StackLayout Orientation="Horizontal" Padding="5,10,20,10" BackgroundColor="#2934D0">
                <BoxView Color="#2934D0" HeightRequest="10" Margin="0" HorizontalOptions="StartAndExpand" />
                <!-- <ffSvg:SvgCachedImage Source="icon_settings.svg" HeightRequest="24" WidthRequest="24" HorizontalOptions="End">
                            <ff:CachedImage.Transformations>
                                <ffTransf:TintTransformation HexColor="#623814" EnableSolidColor="True"/>
                            </ff:CachedImage.Transformations>
                            <ffSvg:SvgCachedImage.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding SettingsCommand}" />
                            </ffSvg:SvgCachedImage.GestureRecognizers>
                        </ffSvg:SvgCachedImage> -->
            </StackLayout>

            <Frame Padding="0" HasShadow="False">
                <RelativeLayout>
                    <StackLayout Spacing="0" x:Name="svgStackView" HeightRequest="155"
                                 RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width}">
                        <ffSvg:SvgCachedImage Source="wave.svg" Margin="0" TranslationY="-1" Scale="1.01">
                            <ff:CachedImage.Transformations>
                                <ffTransf:TintTransformation HexColor="#2934D0" EnableSolidColor="true" />
                            </ff:CachedImage.Transformations>
                        </ffSvg:SvgCachedImage>
                    </StackLayout>

                    <ffSvg:SvgCachedImage x:Name="mangeIcon" Source="manageAccount.svg" HeightRequest="30" WidthRequest="30"
                                RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=svgStackView, Property=Width, Factor=0.76}"
                                RelativeLayout.YConstraint="{ConstraintExpression Type=Constant, Constant=-10}">
                        <ff:CachedImage.Transformations>
                            <ffTransf:TintTransformation HexColor="#623814" EnableSolidColor="True"/>
                        </ff:CachedImage.Transformations>
                        <ffSvg:SvgCachedImage.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding LogoutCommand}" />
                        </ffSvg:SvgCachedImage.GestureRecognizers>
                    </ffSvg:SvgCachedImage>
                    <ffSvg:SvgCachedImage Source="logout.svg" HeightRequest="30" WidthRequest="30"
                                RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=svgStackView, Property=Width, Factor=0.87}"
                                RelativeLayout.YConstraint="{ConstraintExpression Type=Constant, Constant=-10}">
                        <ff:CachedImage.Transformations>
                            <ffTransf:TintTransformation HexColor="#623814" EnableSolidColor="True"/>
                        </ff:CachedImage.Transformations>
                        <ffSvg:SvgCachedImage.GestureRecognizers>
                            <TapGestureRecognizer Tapped="logOut"  />
                        </ffSvg:SvgCachedImage.GestureRecognizers>
                    </ffSvg:SvgCachedImage>

                    <controls:CircleImage  x:Name="ProfilePictureImage" Source="{Binding User.PhotoUrl,Converter={StaticResource ImageSourceConverter}}" WidthRequest="110" HeightRequest="110" 
                                                  BorderColor="Gray" BorderThickness="1"
                        RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=svgStackView, Property=Width, Factor=0.055}"
                        RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView, ElementName=svgStackView, Property=Height, Factor=0.2}" />

                    <Label  Text="{Binding User.FulllName}" TextColor="{DynamicResource primaryText}" LineBreakMode="TailTruncation"
                        FontSize="24" x:Name="accountNameView"
                        RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=ProfilePictureImage, Property=X}"
                        RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView, ElementName=svgStackView, Property=Height}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.5}" />

                    <Label TextColor="{DynamicResource tertiaryText}" x:Name="usernameView" LineBreakMode="TailTruncation" FontSize="19"
                        RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=accountNameView, Property=X}"
                        RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView, ElementName=accountNameView, Property=Y, Constant=32}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.5}" >
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="@" />
                                <Span Text="{Binding User.UserName}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>

                    <local:ButtonNoPadding Text="Edit Profile" FontAttributes="Bold" CornerRadius="11" HeightRequest="32" WidthRequest="108" Margin="0" FontSize="16" TextColor="White" Command="{Binding EditProfileCommand}"
                                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.67}"
                                    RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView, ElementName=accountNameView, Property=Y, Constant=16}" BackgroundColor="#2934D0"/>
                    <Grid  RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=svgStackView, Property=Width, Factor=0.31}"
                        RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView, ElementName=svgStackView, Property=Height, Factor=0.4}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <local:ButtonNoPadding FontSize="17" TextColor="Black" Grid.Column="0" Text="{Binding userIntrest.Count, StringFormat='{0}&#10;Interest'}"  BackgroundColor="Transparent" />
                        <local:ButtonNoPadding FontSize="17" TextColor="Black" Grid.Column="1" Text="{Binding follwedBy.Count, StringFormat='{0}&#10;Follwers'}"  BackgroundColor="Transparent" />
                        <local:ButtonNoPadding FontSize="17" TextColor="Black" Grid.Column="2"  Text="{Binding followedUsers.Count, StringFormat='{0}&#10;Follwing'}"  BackgroundColor="Transparent" />
                       


                    </Grid>


                </RelativeLayout>
            </Frame>
            <StackLayout Padding="10,10,10,12" BackgroundColor="White">
                <CollectionView SelectionChanged="colview_SelectionChanged" SelectionMode="Single" x:Name="colview"  Margin="-10,0,-10,0" ItemsSource="{Binding articles}" >

                    <CollectionView.ItemsLayout>
                        <GridItemsLayout  Orientation="Vertical"
                        Span="2"
                        VerticalItemSpacing="20" HorizontalItemSpacing="0" 
                                      />



                    </CollectionView.ItemsLayout>

                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <StackLayout Padding="10,0,10,0">
                                <yummy:PancakeView Border="{yummy:BorderMarkup Color={Binding diviedColor}, Thickness='1'}" WidthRequest="{Binding Source={x:Reference colview},Path=BindingContext.PageWidth}"  HeightRequest="220" Margin="0,0,0,0" Padding="0,0,0,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="15*" />
                                            <RowDefinition Height="60*" />
                                            <RowDefinition Height="15*" />
                                            <RowDefinition Height="10*" />

                                        </Grid.RowDefinitions>
                                        <Label HorizontalOptions="Center" VerticalOptions="Center" Text="{Binding Article.ArticleName}" Grid.Row="0" Grid.ColumnSpan="2" TextColor="#12121D" FontSize="20" FontAttributes="Bold" FontFamily="Roboto"/>
                                        <Image HorizontalOptions="Center"  Source="{Binding PhotoUrl, Converter={StaticResource ImageSourceConverter}}" Grid.Row="1" Grid.ColumnSpan="2"/>
                                        <Label Padding="5,0,0,0"   Text="{Binding Article.Description}" Grid.Row="2" Grid.ColumnSpan="2"/>
                                        <Label  Grid.Row="3" Grid.Column="0" Text="{Binding athours}"/>
                                        <Label  Grid.Row="3" Grid.Column="1" Text="{Binding date}"/>
                                    </Grid>
                                </yummy:PancakeView>
                            </StackLayout>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </StackLayout>
        </StackLayout>
    </ContentView.Content>
</ContentView>